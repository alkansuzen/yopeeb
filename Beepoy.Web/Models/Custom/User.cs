//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beepoy.Web.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    public partial class User : Model
    {

        public List<Beep> FollowingBeeps(Func<Beep, bool> filter, int take = 10)
        {
            return FollowingBeeps(this.UserId, filter, take);
        }
        public List<Beep> FollowingBeeps(long UserId, Func<Beep, bool> filter, int take = 10)
        {
            var getBeeps = (
                            from users in Context.Users
                            join tracks in Context.TrackUserEvents
                                  on users.UserId equals tracks.UserId
                            join beepsEvents in Context.BeepsEvents
                                  on tracks.EventId equals beepsEvents.BeepId
                            join beeps in Context.Beeps
                                  on beepsEvents.BeepId equals beeps.BeepId
                            where UserId == users.UserId
                            select beeps)
                            .Union(
                            from users in Context.Users
                            join places in Context.TrackUserPlaces
                                 on users.UserId equals places.UserId
                            join beepsPlaces in Context.BeepsPlaces
                                 on places.PlaceId equals beepsPlaces.BeepId
                            join beeps in Context.Beeps
                                 on beepsPlaces.BeepId equals beeps.BeepId
                            where UserId == users.UserId
                            select beeps)
                            .Union(
                            from users in Context.Users
                            join trackUser in Context.TrackUserUsers
                                 on users.UserId equals trackUser.UserId
                            join beeps in Context.Beeps
                                 on trackUser.UserIdTracked equals beeps.UserId
                            where UserId == users.UserId
                            select beeps)
                            .Union(
                            /*Beeps dos eventos dos lugares que usuário segue */
                            from users in Context.Users
                            join places in Context.TrackUserPlaces
                                 on users.UserId equals places.UserId
                            join events in Context.Events
                                 on places.PlaceId equals events.PlaceId
                            join beepsEvents in Context.BeepsEvents
                                  on events.EventId equals beepsEvents.BeepId
                            join beeps in Context.Beeps
                                 on beepsEvents.BeepId equals beeps.BeepId
                            where UserId == users.UserId
                            select beeps)
                            .Union(from users in Context.Users
                                   join beeps in Context.Beeps
                                     on users.UserId equals beeps.UserId
                            select beeps)

                            .Distinct()
                            .OrderByDescending(b => b.DateInsert)
                            .Take(take)
                            .Where(filter);
                     
            var result = getBeeps.Cast<Beep>().ToList();

            return result;
        }

   
  
    }
}
